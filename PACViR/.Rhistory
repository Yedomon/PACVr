polygonY <- c(RCircos.Pos[theStart:theEnd,2]*height,
RCircos.Pos[theEnd:theStart,2]*innerPos);
polygon(polygonX, polygonY, col=histColors[aPoint], border=NA);
}
histHeight
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
View(RCircos.Pos)
locations <- as.data.frame(locations)
View(locations)
library(RCircos)
cov.data <- read.csv("/home/nilsj24/Desktop/cov.csv",header = TRUE,sep = " ")
region.data <- read.csv("/home/nilsj24/Desktop/regions.csv",header = TRUE,sep = " ")
gene.data <- read.csv("/home/nilsj24/Desktop/genes.csv",header = TRUE,sep = " ")
threshold <- 25
RCircos::RCircos.Set.Core.Components(cyto.info      =  region.data,
chr.exclude    =  NULL,
tracks.inside  =  8,
tracks.outside =  0)
params <- RCircos::RCircos.Get.Plot.Parameters()
params$base.per.unit <- 225#225
params$track.background <- NULL
params$sub.tracks <- 1
params$hist.width <- 1
params$hist.color <- HistCol(cov.data, threshold)
params$line.color <- "yellow3"
RCircos::RCircos.Reset.Plot.Parameters(params)
boundary <- RCircos.Get.Plot.Boundary(track.num = 5, side = "in", inside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1]-0.3,
outside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1], FALSE);
data.col <- 4
min.value <- NULL
max.value <- NULL
outerPos <- boundary[1];
innerPos <- boundary[2];
RCircos.Pos <- RCircos.Get.Plot.Positions();
RCircos.Par <- RCircos.Get.Plot.Parameters();
RCircos.Cyto <- RCircos.Get.Plot.Ideogram();
hist.data <- RCircos.Get.Single.Point.Positions(cov.data,
genomic.columns);
locations <- RCircos.Get.Start.End.Locations(hist.data,
RCircos.Par$hist.width)
histColors <- RCircos.Get.Plot.Colors(hist.data, RCircos.Par$hist.color);
histValues <- as.numeric(hist.data[, data.col]);
if(is.null(max.value) || is.null(min.value)) {
max.value <- max(histValues);
min.value <- min(histValues);
} else {
if(min.value > max.value) stop("min.value > max.value.")
}
histHeight <- RCircos.Get.Data.Point.Height(histValues, min.value,
max.value, plot.type="points", outerPos-innerPos);
RCircos.Track.Outline(outerPos, innerPos, RCircos.Par$sub.tracks);
for(aPoint in seq_len(nrow(hist.data)))
{
height <- innerPos + histHeight[aPoint];
theStart <- locations[aPoint, 1];
theEnd <- locations[aPoint, 2];
#    Plot rectangle with specific height for each data point
#    =========================================================
#
polygonX <- c(RCircos.Pos[theStart:theEnd,1]*height,
RCircos.Pos[theEnd:theStart,1]*innerPos);
polygonY <- c(RCircos.Pos[theStart:theEnd,2]*height,
RCircos.Pos[theEnd:theStart,2]*innerPos);
polygon(polygonX, polygonY, col=histColors[aPoint], border=NA);
}
locations
locations <- as.data.frame(locations)
View(locations)
library(RCircos)
cov.data <- read.csv("/home/nilsj24/Desktop/cov.csv",header = TRUE,sep = " ")
region.data <- read.csv("/home/nilsj24/Desktop/regions.csv",header = TRUE,sep = " ")
gene.data <- read.csv("/home/nilsj24/Desktop/genes.csv",header = TRUE,sep = " ")
threshold <- 25
RCircos::RCircos.Set.Core.Components(cyto.info      =  region.data,
chr.exclude    =  NULL,
tracks.inside  =  8,
tracks.outside =  0)
params <- RCircos::RCircos.Get.Plot.Parameters()
params$base.per.unit <- 225#225
params$track.background <- NULL
params$sub.tracks <- 1
params$hist.width <- 2
params$hist.color <- HistCol(cov.data, threshold)
params$line.color <- "yellow3"
RCircos::RCircos.Reset.Plot.Parameters(params)
boundary <- RCircos.Get.Plot.Boundary(track.num = 5, side = "in", inside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1]-0.3,
outside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1], FALSE);
data.col <- 4
min.value <- NULL
max.value <- NULL
outerPos <- boundary[1];
innerPos <- boundary[2];
RCircos.Pos <- RCircos.Get.Plot.Positions();
RCircos.Par <- RCircos.Get.Plot.Parameters();
RCircos.Cyto <- RCircos.Get.Plot.Ideogram();
hist.data <- RCircos.Get.Single.Point.Positions(cov.data,
genomic.columns);
locations <- RCircos.Get.Start.End.Locations(hist.data,
RCircos.Par$hist.width)
histColors <- RCircos.Get.Plot.Colors(hist.data, RCircos.Par$hist.color);
histValues <- as.numeric(hist.data[, data.col]);
if(is.null(max.value) || is.null(min.value)) {
max.value <- max(histValues);
min.value <- min(histValues);
} else {
if(min.value > max.value) stop("min.value > max.value.")
}
histHeight <- RCircos.Get.Data.Point.Height(histValues, min.value,
max.value, plot.type="points", outerPos-innerPos);
RCircos.Track.Outline(outerPos, innerPos, RCircos.Par$sub.tracks);
for(aPoint in seq_len(nrow(hist.data)))
{
height <- innerPos + histHeight[aPoint];
theStart <- locations[aPoint, 1];
theEnd <- locations[aPoint, 2];
#    Plot rectangle with specific height for each data point
#    =========================================================
#
polygonX <- c(RCircos.Pos[theStart:theEnd,1]*height,
RCircos.Pos[theEnd:theStart,1]*innerPos);
polygonY <- c(RCircos.Pos[theStart:theEnd,2]*height,
RCircos.Pos[theEnd:theStart,2]*innerPos);
polygon(polygonX, polygonY, col=histColors[aPoint], border=NA);
}
locations <- as.data.frame(locations)
View(locations)
library(RCircos)
cov.data <- read.csv("/home/nilsj24/Desktop/cov.csv",header = TRUE,sep = " ")
region.data <- read.csv("/home/nilsj24/Desktop/regions.csv",header = TRUE,sep = " ")
gene.data <- read.csv("/home/nilsj24/Desktop/genes.csv",header = TRUE,sep = " ")
threshold <- 25
RCircos::RCircos.Set.Core.Components(cyto.info      =  region.data,
chr.exclude    =  NULL,
tracks.inside  =  8,
tracks.outside =  0)
params <- RCircos::RCircos.Get.Plot.Parameters()
params$base.per.unit <- 225#225
params$track.background <- NULL
params$sub.tracks <- 1
params$hist.width <- 10
params$hist.color <- HistCol(cov.data, threshold)
params$line.color <- "yellow3"
RCircos::RCircos.Reset.Plot.Parameters(params)
boundary <- RCircos.Get.Plot.Boundary(track.num = 5, side = "in", inside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1]-0.3,
outside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1], FALSE);
data.col <- 4
min.value <- NULL
max.value <- NULL
outerPos <- boundary[1];
innerPos <- boundary[2];
RCircos.Pos <- RCircos.Get.Plot.Positions();
RCircos.Par <- RCircos.Get.Plot.Parameters();
RCircos.Cyto <- RCircos.Get.Plot.Ideogram();
hist.data <- RCircos.Get.Single.Point.Positions(cov.data,
genomic.columns);
locations <- RCircos.Get.Start.End.Locations(hist.data,
RCircos.Par$hist.width)
histColors <- RCircos.Get.Plot.Colors(hist.data, RCircos.Par$hist.color);
histValues <- as.numeric(hist.data[, data.col]);
if(is.null(max.value) || is.null(min.value)) {
max.value <- max(histValues);
min.value <- min(histValues);
} else {
if(min.value > max.value) stop("min.value > max.value.")
}
histHeight <- RCircos.Get.Data.Point.Height(histValues, min.value,
max.value, plot.type="points", outerPos-innerPos);
RCircos.Track.Outline(outerPos, innerPos, RCircos.Par$sub.tracks);
for(aPoint in seq_len(nrow(hist.data)))
{
height <- innerPos + histHeight[aPoint];
theStart <- locations[aPoint, 1];
theEnd <- locations[aPoint, 2];
#    Plot rectangle with specific height for each data point
#    =========================================================
#
polygonX <- c(RCircos.Pos[theStart:theEnd,1]*height,
RCircos.Pos[theEnd:theStart,1]*innerPos);
polygonY <- c(RCircos.Pos[theStart:theEnd,2]*height,
RCircos.Pos[theEnd:theStart,2]*innerPos);
polygon(polygonX, polygonY, col=histColors[aPoint], border=NA);
}
locations <- as.data.frame(locations)
View(locations)
library(RCircos)
cov.data <- read.csv("/home/nilsj24/Desktop/cov.csv",header = TRUE,sep = " ")
region.data <- read.csv("/home/nilsj24/Desktop/regions.csv",header = TRUE,sep = " ")
gene.data <- read.csv("/home/nilsj24/Desktop/genes.csv",header = TRUE,sep = " ")
threshold <- 25
RCircos::RCircos.Set.Core.Components(cyto.info      =  region.data,
chr.exclude    =  NULL,
tracks.inside  =  8,
tracks.outside =  0)
params <- RCircos::RCircos.Get.Plot.Parameters()
params$base.per.unit <- 225#225
params$track.background <- NULL
params$sub.tracks <- 1
params$hist.width <- 1
params$hist.color <- HistCol(cov.data, threshold)
params$line.color <- "yellow3"
RCircos::RCircos.Reset.Plot.Parameters(params)
boundary <- RCircos.Get.Plot.Boundary(track.num = 5, side = "in", inside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1]-0.3,
outside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1], FALSE);
data.col <- 4
min.value <- NULL
max.value <- NULL
outerPos <- boundary[1];
innerPos <- boundary[2];
RCircos.Pos <- RCircos.Get.Plot.Positions();
RCircos.Par <- RCircos.Get.Plot.Parameters();
RCircos.Cyto <- RCircos.Get.Plot.Ideogram();
hist.data <- RCircos.Get.Single.Point.Positions(cov.data,
genomic.columns);
locations <- RCircos.Get.Start.End.Locations(hist.data,
RCircos.Par$hist.width)
histColors <- RCircos.Get.Plot.Colors(hist.data, RCircos.Par$hist.color);
histValues <- as.numeric(hist.data[, data.col]);
if(is.null(max.value) || is.null(min.value)) {
max.value <- max(histValues);
min.value <- min(histValues);
} else {
if(min.value > max.value) stop("min.value > max.value.")
}
histHeight <- RCircos.Get.Data.Point.Height(histValues, min.value,
max.value, plot.type="points", outerPos-innerPos);
RCircos.Track.Outline(outerPos, innerPos, RCircos.Par$sub.tracks);
for(aPoint in seq_len(nrow(hist.data)))
{
height <- innerPos + histHeight[aPoint];
theStart <- locations[aPoint, 1];
theEnd <- locations[aPoint, 2];
#    Plot rectangle with specific height for each data point
#    =========================================================
#
polygonX <- c(RCircos.Pos[theStart:theEnd,1]*height,
RCircos.Pos[theEnd:theStart,1]*innerPos);
polygonY <- c(RCircos.Pos[theStart:theEnd,2]*height,
RCircos.Pos[theEnd:theStart,2]*innerPos);
polygon(polygonX, polygonY, col=histColors[aPoint], border=NA);
}
locations <- as.data.frame(locations)
RCircos.Pos
hist.data
View(hist.data)
polygonX
polygonY
library(RCircos)
cov.data <- read.csv("/home/nilsj24/Desktop/cov.csv",header = TRUE,sep = " ")
region.data <- read.csv("/home/nilsj24/Desktop/regions.csv",header = TRUE,sep = " ")
gene.data <- read.csv("/home/nilsj24/Desktop/genes.csv",header = TRUE,sep = " ")
threshold <- 25
RCircos::RCircos.Set.Core.Components(cyto.info      =  region.data,
chr.exclude    =  NULL,
tracks.inside  =  8,
tracks.outside =  0)
params <- RCircos::RCircos.Get.Plot.Parameters()
params$base.per.unit <- 225#225
params$track.background <- NULL
params$sub.tracks <- 1
params$hist.width <- 1
params$hist.color <- HistCol(cov.data, threshold)
params$line.color <- "yellow3"
RCircos::RCircos.Reset.Plot.Parameters(params)
boundary <- RCircos.Get.Plot.Boundary(track.num = 5, side = "in", inside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1]-0.3,
outside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1], FALSE);
data.col <- 4
min.value <- NULL
max.value <- NULL
outerPos <- boundary[1];
innerPos <- boundary[2];
RCircos.Pos <- RCircos.Get.Plot.Positions();
RCircos.Par <- RCircos.Get.Plot.Parameters();
RCircos.Cyto <- RCircos.Get.Plot.Ideogram();
hist.data <- RCircos.Get.Single.Point.Positions(cov.data,
genomic.columns);
locations <- RCircos.Get.Start.End.Locations(hist.data,
RCircos.Par$hist.width)
histColors <- RCircos.Get.Plot.Colors(hist.data, RCircos.Par$hist.color);
histValues <- as.numeric(hist.data[, data.col]);
if(is.null(max.value) || is.null(min.value)) {
max.value <- max(histValues);
min.value <- min(histValues);
} else {
if(min.value > max.value) stop("min.value > max.value.")
}
histHeight <- RCircos.Get.Data.Point.Height(histValues, min.value,
max.value, plot.type="points", outerPos-innerPos);
RCircos.Track.Outline(outerPos, innerPos, RCircos.Par$sub.tracks);
for(aPoint in seq_len(nrow(hist.data)))
{
height <- innerPos + histHeight[aPoint];
theStart <- locations[aPoint, 1];
theEnd <- locations[aPoint, 2];
#    Plot rectangle with specific height for each data point
#    =========================================================
#
polygonX <- c(RCircos.Pos[theStart:theEnd,1]*height,
RCircos.Pos[theEnd:theStart,1]*innerPos);
polygonX
polygonY <- c(RCircos.Pos[theStart:theEnd,2]*height,
RCircos.Pos[theEnd:theStart,2]*innerPos);
polygon(polygonX, polygonY, col=histColors[aPoint], border=NA);
}
locations <- as.data.frame(locations)
library(RCircos)
cov.data <- read.csv("/home/nilsj24/Desktop/cov.csv",header = TRUE,sep = " ")
region.data <- read.csv("/home/nilsj24/Desktop/regions.csv",header = TRUE,sep = " ")
gene.data <- read.csv("/home/nilsj24/Desktop/genes.csv",header = TRUE,sep = " ")
threshold <- 25
RCircos::RCircos.Set.Core.Components(cyto.info      =  region.data,
chr.exclude    =  NULL,
tracks.inside  =  8,
tracks.outside =  0)
params <- RCircos::RCircos.Get.Plot.Parameters()
params$base.per.unit <- 225#225
params$track.background <- NULL
params$sub.tracks <- 1
params$hist.width <- 1
params$hist.color <- HistCol(cov.data, threshold)
params$line.color <- "yellow3"
RCircos::RCircos.Reset.Plot.Parameters(params)
boundary <- RCircos.Get.Plot.Boundary(track.num = 5, side = "in", inside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1]-0.3,
outside.pos = RCircos::RCircos.Get.Plot.Boundary(track.num = 5, "in")[1], FALSE);
genomic.columns <- 3
data.col <- 4
min.value <- NULL
max.value <- NULL
outerPos <- boundary[1];
innerPos <- boundary[2];
RCircos.Pos <- RCircos.Get.Plot.Positions();
RCircos.Par <- RCircos.Get.Plot.Parameters();
RCircos.Cyto <- RCircos.Get.Plot.Ideogram();
hist.data <- RCircos.Get.Single.Point.Positions(cov.data,
genomic.columns);
locations <- RCircos.Get.Start.End.Locations(hist.data,
RCircos.Par$hist.width)
histColors <- RCircos.Get.Plot.Colors(hist.data, RCircos.Par$hist.color);
histValues <- as.numeric(hist.data[, data.col]);
if(is.null(max.value) || is.null(min.value)) {
max.value <- max(histValues);
min.value <- min(histValues);
} else {
if(min.value > max.value) stop("min.value > max.value.")
}
histHeight <- RCircos.Get.Data.Point.Height(histValues, min.value,
max.value, plot.type="points", outerPos-innerPos);
RCircos.Track.Outline(outerPos, innerPos, RCircos.Par$sub.tracks);
for(aPoint in seq_len(nrow(hist.data)))
{
height <- innerPos + histHeight[aPoint];
theStart <- locations[aPoint, 1];
theEnd <- locations[aPoint, 2];
#    Plot rectangle with specific height for each data point
#    =========================================================
#
polygonX <- c(RCircos.Pos[theStart:theEnd,1]*height,
RCircos.Pos[theEnd:theStart,1]*innerPos);
polygonX
polygonY <- c(RCircos.Pos[theStart:theEnd,2]*height,
RCircos.Pos[theEnd:theStart,2]*innerPos);
polygon(polygonX, polygonY, col=histColors[aPoint], border=NA);
}
locations <- as.data.frame(locations)
polygonX
polygon(polygonX, polygonY, col=histColors[aPoint], border=NA)
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
?expression
expression(leq)
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
?plotmath
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
?symbol
expression(symbol("\304"))
print(expression(symbol("\304")))
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 24, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
?pdf
source('~/Desktop/smallPACViR.R', echo=TRUE)
source('~/Desktop/smallPACViR.R', echo=TRUE)
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
source('~/Desktop/project_gruenstaeudl/PACViR/R/visualizeWithRCircos.R', echo=TRUE)
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/SCHM2_processed.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/SCHM2/SCHM2_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
threshold = 35, outDir = "/home/nilsj24/Desktop/", windowSize = 250)
source("PACViR.R")
PACViR.complete(gbk.file="/home/nilsj24/Desktop/project_gruenstaeudl/test_input/Dasyphyllum_excelsum_DAS01_CompleteAssembly_2018.09.10.2130.gb",
bam.file = "/home/nilsj24/Desktop/project_gruenstaeudl/test_input/DAS01/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/nilsj24/Desktop/")
# Chunk 1
options(width=60, size="scriptsize")
# Chunk 2
#require(PACViR)
require(RCircos)
require(genbankr)
require(optparse)
# Chunk 3
gbk.file <- "./SCHM2.gb"
bam.file <- "./SCHM2.bam"
windowSize <- 250
mosdepthCmd <- "mosdepth"
threshold <- 25
outDir <- "./output"
#PACViR.complete(gbk.file, bam.file, windowSize, mosdepthCmd, threshold, outDir)
# Chunk 4
sessionInfo()
source("PACViR.R")
PACViR.complete(gbk.file="/home/michael_science/Desktop/TEMP/testdata/Dasyphyllum_excelsum_MH899017_forPACViR.gb",
bam.file = "/home/michael_science/Desktop/TEMP/testdata/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/michael_science/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/michael_science/Desktop/TEMP/testdata/Dasyphyllum_excelsum_MH899017_forPACViR.gb",
bam.file = "/home/michael_science/Desktop/TEMP/testdata/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/michael_science/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/michael_science/Desktop/TEMP/testdata/Dasyphyllum_excelsum_MH899017_forPACViR.gb",
bam.file = "/home/michael_science/Desktop/TEMP/testdata/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/michael_science/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/michael_science/Desktop/TEMP/testdata/Dasyphyllum_excelsum_MH899017_forPACViR.gb",
bam.file = "/home/michael_science/Desktop/TEMP/testdata/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/michael_science/Desktop/")
install.packages("RCircos")
source("PACViR.R")
PACViR.complete(gbk.file="/home/michael_science/Desktop/TEMP/testdata/Dasyphyllum_excelsum_MH899017_forPACViR.gb",
bam.file = "/home/michael_science/Desktop/TEMP/testdata/DAS01_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize= 250,threshold = 35, outDir = "/home/michael_science/Desktop/")
source("PACViR.R")
PACViR.complete(gbk.file="/home/michael_science/Desktop/TEMP/testdata/Schlechtendalia_luzulaefolia_MH800324_forPACViR.gb",
bam.file="/home/michael_science/Desktop/TEMP/testdata/SCHM2_PlastomeReadsOnly_cappedMaxCoverage_BackMapping.sorted.bam",
windowSize=250, threshold=35, outDir="/home/michael_science/Desktop/")
